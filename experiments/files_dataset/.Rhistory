View(data)
View(data)
View(data)
View(data)
View(data)
View(data)
View(data)
IMDB <- read.csv("first_database.csv")
rm(data)
rm(data)
setwd("~/10o_examino/διπλωματικη/πειραματικό_μέρος/files_dataset")
library("dplyr")
library(foreign)
library(stringr)
actors<-read.csv("actors.csv")
actors <- actors %>% mutate(actor_score = top_imdb_score*0.4 +
avg_imdb_score*0.4 +
total_gross*0.15 +
avg_gross*0 +
total_profit*0.025 +
avg_profit*0.025 +
nominations*0 +
oscars*0.3 +
ifelse(facebook_likes>=1000,0.5,0))
actors <- subset(actors, select = c(actor_name,actor_score))
directors<-read.csv("directors.csv")
directors <- directors %>% mutate(director_score = top_imdb_score*0.4 +
avg_imdb_score*0.4 +
total_gross*0.15 +
avg_gross*0 +
total_profit*0.025 +
avg_profit*0.025 +
nominations*0+
oscars*0.3)
directors <- subset(directors, select = c(director_name,director_score))
test <- subset(test, select = c(director_name,actor_3_name,actor_2_name,actor_1_name,imdb_score,avg_keyword_score))
test<-merge(test,actors,by.x="actor_1_name",by.y="actor_name")
colnames(test)[7]<-"actor1_score"
test<-merge(test,actors,by.x="actor_2_name",by.y="actor_name")
colnames(test)[8]<-"actor2_score"
test<-merge(test,actors,by.x="actor_3_name",by.y="actor_name")
colnames(test)[9]<-"actor3_score"
test<-merge(test,directors,by="director_name")
data<-read.csv("first_database.csv")
rm(data)
IMDB<-read.csv("first_database.csv")
IMDB <- subset(IMDB, select = c(actor_1_name,actor_2_name,actor_3_name,director_name, plot_keywords,imdb_score))
keywords_score<-read.csv("keyword_score.csv")
View(keywords_score)
View(actors)
View(directors)
View(keywords_score)
View(actors)
View(directors)
rm(keywords_score)
words<-read.csv("keywords_test1.csv")
View(words)
words <- words[!is.na(words$imdb_score), ]
words <- words[!is.na(words$plot_keyword5), ]
words <- words[!is.na(words$plot_keyword4), ]
words <- words[!is.na(words$plot_keyword3), ]
words <- words[!is.na(words$plot_keyword2), ]
words <- words[!is.na(words$plot_keyword1), ]
keywords_score<-read.csv("keyword_score.csv")
test<-merge(words,keywords_score,by.x="plot_keyword1",by.y="plot_keywords")
View(test)
View(actors)
rm(test)
test<-merge(words,keywords_score,by.x="plot_keyword1",by.y="plot_keywords")
colnames(test)[11]<-"keyword1_score"
test<-merge(test,keywords_score,by.x="plot_keyword2",by.y="plot_keywords")
colnames(test)[12]<-"keyword2_score"
test<-merge(test,keywords_score,by.x="plot_keyword3",by.y="plot_keywords")
colnames(test)[13]<-"keyword3_score"
test<-merge(test,keywords_score,by.x="plot_keyword4",by.y="plot_keywords")
colnames(test)[14]<-"keyword4_score"
test<-merge(test,keywords_score,by.x="plot_keyword5",by.y="plot_keywords")
colnames(test)[15]<-"keyword5_score"
View(test)
test<-merge(test,actors,by.x="actor_1_name",by.y="actor_name")
colnames(test)[16]<-"actor1_score"
test<-merge(test,actors,by.x="actor_2_name",by.y="actor_name")
colnames(test)[17]<-"actor2_score"
test<-merge(test,actors,by.x="actor_3_name",by.y="actor_name")
colnames(test)[18]<-"actor3_score"
test<-merge(test,directors,by="director_name")
View(test)
test$keywords_score<-(test$keyword1_score + test$keyword2_score + test$keyword3_score + test$keyword4_score + test$keyword5_score)/5
colnames(test)[20]<-"avg_keyword_score"
actors<-read.csv("actors.csv")
directors<-read.csv("directors.csv")
View(directors)
View(actors)
View(directors)
directors<-directors[,0:9]
View(directors)
directors<-read.csv("directors.csv")
directors<-directors[,0:10]
write.csv(directors, "directors.csv", quote=FALSE, row.names = FALSE)
directors<-read.csv("directors.csv")
View(directors)
write.csv(test, "test.csv", quote=FALSE, row.names = FALSE)
View(test)
test <- subset(test, select = c(director_name,actor_3_name,actor_2_name,actor_1_name,imdb_score,avg_keyword_score))
write.csv(test, "test.csv", quote=FALSE, row.names = FALSE)
View(test)
#test<-read.csv("test.csv")
rm(actors)
rm(directors)
actors<-read.csv("actors.csv")
directors<-read.csv("directors.csv")
#test<-read.csv("test.csv")
rm(actors)
rm(directors)
actors<-read.csv("actors.csv")
directors<-read.csv("directors.csv")
actors <- actors %>% mutate(actor_score = top_imdb_score*0.2 +
avg_imdb_score*0.6 +
total_gross*0.09 +
avg_gross*0.06 +
total_profit*0.03 +
avg_profit*0.02 +
nominations*0.2 +
oscars*0.1 +
ifelse(facebook_likes>=1000,0.5,0))
View(actors)
actors <- subset(actors, select = c(actor_name,actor_score))
directors <- directors %>% mutate(director_score = top_imdb_score*0.2 +
avg_imdb_score*0.6 +
total_gross*0.1125 +
avg_gross*0.0375 +
total_profit*0.0375 +
avg_profit*0.0125 +
nominations*0.2+
oscars*0.1)
directors <- subset(directors, select = c(director_name,director_score))
rm(test)
test<-read.csv("test.csv")
rm(words)
rm(keywords_score)
View(IMDB)
rm(IMDB)
rm(actors)
rm(directors)
rm(test)
test<-read.csv("test.csv")
actors<-read.csv("actors.csv")
directors<-read.csv("directors.csv")
actors <- actors %>% mutate(actor_score = top_imdb_score*0.2 +
avg_imdb_score*0.6 +
total_gross*0.09 +
avg_gross*0.06 +
total_profit*0.03 +
avg_profit*0.02 +
nominations*0.2 +
oscars*0.1 +
ifelse(facebook_likes>=1000,0.5,0))
actors <- subset(actors, select = c(actor_name,actor_score))
directors <- directors %>% mutate(director_score = top_imdb_score*0.2 +
avg_imdb_score*0.6 +
total_gross*0.1125 +
avg_gross*0.0375 +
total_profit*0.0375 +
avg_profit*0.0125 +
nominations*0.2+
oscars*0.1)
directors <- subset(directors, select = c(director_name,director_score))
View(test)
test<-merge(test,actors,by.x="actor_1_name",by.y="actor_name")
colnames(test)[7]<-"actor1_score"
test<-merge(test,actors,by.x="actor_2_name",by.y="actor_name")
colnames(test)[8]<-"actor2_score"
test<-merge(test,actors,by.x="actor_3_name",by.y="actor_name")
colnames(test)[9]<-"actor3_score"
test<-merge(test,directors,by="director_name")
View(test)
test <- subset(test, select = c(imdb_score,avg_keyword_score,director_score,actor1_score,actor2_score,actor3_score))
write.arff(test,file="peirama1.arff")
rm(actors)
rm(directors)
rm(test)
test<-read.csv("test.csv")
actors<-read.csv("actors.csv")
directors<-read.csv("directors.csv")
actors <- actors %>% mutate(actor_score = top_imdb_score*0.4 +
avg_imdb_score*0.4 +
total_gross*0.09 +
avg_gross*0.06 +
total_profit*0.03 +
avg_profit*0.02 +
nominations*0.2 +
oscars*0.1 +
ifelse(facebook_likes>=1000,0.5,0))
actors <- subset(actors, select = c(actor_name,actor_score))
directors <- directors %>% mutate(director_score = top_imdb_score*0.4 +
avg_imdb_score*0.4 +
total_gross*0.1125 +
avg_gross*0.0375 +
total_profit*0.0375 +
avg_profit*0.0125 +
nominations*0.2+
oscars*0.1)
directors <- subset(directors, select = c(director_name,director_score))
test<-merge(test,actors,by.x="actor_1_name",by.y="actor_name")
colnames(test)[7]<-"actor1_score"
test<-merge(test,actors,by.x="actor_2_name",by.y="actor_name")
colnames(test)[8]<-"actor2_score"
test<-merge(test,actors,by.x="actor_3_name",by.y="actor_name")
colnames(test)[9]<-"actor3_score"
test<-merge(test,directors,by="director_name")
test <- subset(test, select = c(imdb_score,avg_keyword_score,director_score,actor1_score,actor2_score,actor3_score))
write.arff(test,file="peirama4.arff")
write.arff(test,file="peiramata_12_6_2020\peirama4.arff")
write.arff(test,file="peiramata_12_6_2020/peirama4.arff")
write.arff(test,file="peiramata_12_6_2020/peirama3.arff")
write.arff(test,file="peiramata_12_6_2020/peirama4.arff")
View(actors)
View(directors)
View(actors)
rm(actors)
rm(directors)
rm(test)
IMDB<-read.csv("first_database.csv")
IMDB <- subset(IMDB, select = c(actor_1_name,actor_2_name,actor_3_name,director_name, plot_keywords,imdb_score))
IMDB<-read.csv("first_database.csv")
actor1 <- subset(IMDB, select = c(actor_1_name,actor_1_facebook_likes,gross,budget,imdb_score))
actor1 <- actor1 %>%
mutate(profit = gross - budget)
View(actor1)
View(actor1)
actor1 <- actor1 %>% group_by(actor_1_name) %>% summarise(facebook_likes = max(actor_1_facebook_likes), total_gross = sum(as.numeric(gross)), avg_gross = mean(gross), total_profit = sum(as.numeric(profit)), avg_profit = mean(profit), avg_imdb_score = mean(imdb_score), top_imdb_score = max(imdb_score))
View(actor1)
actor1 <- actor11[!is.na(actor11$facebook_likes), ]
actor1 <- actor1[!is.na(actor11$facebook_likes), ]
actor1 <- actor1[!is.na(actor1$facebook_likes), ]
actor1 <- actor1[!is.na(actor1$facebook_likes), ]
actor2 <- subset(IMDB, select = c(actor_2_name,actor_2_facebook_likes,gross,budget,imdb_score))
View(actor1)
actor2 <- subset(IMDB, select = c(actor_2_name,actor_2_facebook_likes,gross,budget,imdb_score))
actor2 <- actor2 %>%
mutate(profit = gross - budget)
actor2 <- actor2 %>% group_by(actor_2_name) %>% summarise(facebook_likes = max(actor_2_facebook_likes), total_gross = sum(as.numeric(gross)), avg_gross = mean(gross), total_profit = sum(as.numeric(profit)), avg_profit = mean(profit), avg_imdb_score = mean(imdb_score), top_imdb_score = max(imdb_score))
actor2 <- actor2[!is.na(actor2$facebook_likes), ]
actor3 <- subset(IMDB, select = c(actor_3_name,actor_3_facebook_likes,gross,budget,imdb_score))
actor3 <- actor3 %>%
mutate(profit = gross - budget)
actor3 <- actor3 %>% group_by(actor_3_name) %>% summarise(facebook_likes = max(actor_3_facebook_likes), total_gross = sum(as.numeric(gross)), avg_gross = mean(gross), total_profit = sum(as.numeric(profit)), avg_profit = mean(profit), avg_imdb_score = mean(imdb_score), top_imdb_score = max(imdb_score))
actor3 <- actor3[!is.na(actor3$facebook_likes), ]
colnames(actor1)[1] <- "actor_name"
colnames(actor2)[1] <- "actor_name"
colnames(actor3)[1] <- "actor_name"
test = merge(actor1, actor2, all = TRUE)
actors = merge(test, actor3, all = TRUE)
actors <- actors %>% group_by(actor_name) %>% summarise(facebook_likes = max(facebook_likes), total_gross = sum(as.numeric(total_gross)), avg_gross = mean(avg_gross), total_profit = sum(as.numeric(total_profit)), avg_profit = mean(avg_profit), avg_imdb_score = mean(avg_imdb_score), top_imdb_score = max(top_imdb_score))
actors <- actors[!is.na(test$avg_gross), ]
actors <- actors[!is.na(actors$avg_gross), ]
rm(test)
View(actors)
rm(actors1)
rm(actor1)
rm(actor2)
rm(actor3)
actors<-read.csv("actors.csv")
View(actors)
IMDB<-read.csv("first_database.csv")
actor1 <- subset(IMDB, select = c(actor_1_name,actor_1_facebook_likes,gross,budget,imdb_score))
actor1 <- actor1 %>%
mutate(profit = gross - budget)
actor1 <- actor1 %>% group_by(actor_1_name) %>% summarise(facebook_likes = max(actor_1_facebook_likes), total_gross = sum(as.numeric(gross)), avg_gross = mean(gross), total_profit = sum(as.numeric(profit)), avg_profit = mean(profit), avg_imdb_score = mean(imdb_score), top_imdb_score = max(imdb_score))
actor1 <- actor1[!is.na(actor1$facebook_likes), ]
actor2 <- subset(IMDB, select = c(actor_2_name,actor_2_facebook_likes,gross,budget,imdb_score))
actor2 <- actor2 %>%
mutate(profit = gross - budget)
actor2 <- actor2 %>% group_by(actor_2_name) %>% summarise(facebook_likes = max(actor_2_facebook_likes), total_gross = sum(as.numeric(gross)), avg_gross = mean(gross), total_profit = sum(as.numeric(profit)), avg_profit = mean(profit), avg_imdb_score = mean(imdb_score), top_imdb_score = max(imdb_score))
actor2 <- actor2[!is.na(actor2$facebook_likes), ]
actor3 <- subset(IMDB, select = c(actor_3_name,actor_3_facebook_likes,gross,budget,imdb_score))
actor3 <- actor3 %>%
mutate(profit = gross - budget)
actor3 <- actor3 %>% group_by(actor_3_name) %>% summarise(facebook_likes = max(actor_3_facebook_likes), total_gross = sum(as.numeric(gross)), avg_gross = mean(gross), total_profit = sum(as.numeric(profit)), avg_profit = mean(profit), avg_imdb_score = mean(imdb_score), top_imdb_score = max(imdb_score))
actor3 <- actor3[!is.na(actor3$facebook_likes), ]
colnames(actor1)[1] <- "actor_name"
colnames(actor2)[1] <- "actor_name"
colnames(actor3)[1] <- "actor_name"
View(actor1)
test = merge(actor1, actor2, all = TRUE)
actors = merge(test, actor3, all = TRUE)
rm(test)
rm(actor1)
rm(actor2)
rm(actor3)
actors <- actors %>% group_by(actor_name) %>% summarise(facebook_likes = max(facebook_likes), total_gross = sum(as.numeric(total_gross)), avg_gross = mean(avg_gross), total_profit = sum(as.numeric(total_profit)), avg_profit = mean(avg_profit), avg_imdb_score = mean(avg_imdb_score), top_imdb_score = max(top_imdb_score))
View(actors)
actors <- actors %>% group_by(actor_name) %>% summarise(facebook_likes = max(facebook_likes), total_gross = sum(as.numeric(total_gross)), avg_gross = mean(avg_gross), total_profit = sum(as.numeric(total_profit)), avg_profit = mean(avg_profit), avg_imdb_score = mean(avg_imdb_score), top_imdb_score = max(top_imdb_score))
actors <- actors[!is.na(actors$avg_gross), ]
View(actors)
actors <- actors[!is.na(actors$top_imdb_score), ]
actors <- actors[!is.na(actors$avg_imdb_score), ]
actors <- actors[!is.na(actors$total_gross), ]
actors <- actors[!is.na(actors$avg_gross), ]
actors <- actors[!is.na(actors$total_profit), ]
actors <- actors[!is.na(actors$avg_profit), ]
View(actors)
View(actors)
